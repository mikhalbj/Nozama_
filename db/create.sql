-- Feel free to modify this file to match your development goal.
-- Here we only create 3 tables for demo purpose.

-- CREATE TABLE Users (
--     id INT GENERATED BY DEFAULT AS IDENTITY,
--     email VARCHAR UNIQUE NOT NULL,
--     password VARCHAR(255) NOT NULL,
--     firstname VARCHAR(255) NOT NULL,
--     lastname VARCHAR(255) NOT NULL
-- );

-- CREATE TABLE Products (
--     id INT NOT NULL PRIMARY KEY,
--     name VARCHAR(255) UNIQUE NOT NULL,
--     price FLOAT NOT NULL,
--     available BOOLEAN DEFAULT TRUE
-- );

-- CREATE TABLE Purchases (
--     id INT NOT NULL PRIMARY KEY,
--     uid INT NOT NULL,
--     pid INT NOT NULL,
--     time_purchased timestamp without time zone NOT NULL DEFAULT (current_timestamp AT TIME ZONE 'UTC')
-- );


CREATE TABLE Account (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email VARCHAR UNIQUE NOT NULL,
    password VARCHAR(255) NOT NULL,
    firstname VARCHAR(255) NOT NULL,
    lastname VARCHAR(255) NOT NULL,
    address VARCHAR NOT NULL
);

CREATE TABLE Balance (
    id INT NOT NULL PRIMARY KEY REFERENCES Account(id),
    balance FLOAT(2) NOT NULL CHECK (balance >= 0)
);

CREATE TABLE Seller(
    id INT PRIMARY KEY REFERENCES Account(id)
);

CREATE TABLE Product (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR NOT NULL,
    description VARCHAR NOT NULL,
    price FLOAT(2) NOT NULL CHECK (price >= 0),
    available BOOLEAN DEFAULT TRUE,
    seller INT NOT NULL REFERENCES Seller(id)
);

CREATE TABLE ProductInventory (
    product INT NOT NULL PRIMARY KEY REFERENCES Product(id),
    quantity INT NOT NULL CHECK (quantity >= 0)
);

CREATE TABLE Tag (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(25) NOT NULL
);

CREATE TABLE ProductTag(
    tag INT NOT NULL REFERENCES Tag(id),
    product INT NOT NULL REFERENCES Product(id),
    PRIMARY KEY (tag, product)   
);

CREATE TABLE ProductImage(
    product INT NOT NULL PRIMARY KEY REFERENCES Product(id),
    url VARCHAR NOT NULL
);

CREATE TABLE CartProduct(
    account INT NOT NULL REFERENCES Account(id),
    product INT NOT NULL REFERENCES Product(id),
    quantity INT NOT NULL CHECK (quantity > 0),
    PRIMARY KEY (account, product)
);

CREATE TABLE SavedProduct(
    account INT NOT NULL REFERENCES Account(id),
    product INT NOT NULL REFERENCES Product(id),
    PRIMARY KEY (account, product)
);

CREATE TABLE AccountOrder(
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    account INT REFERENCES Account(id),
    placed_at TIMESTAMP WITHOUT TIME ZONE NOT NULL DEFAULT (current_timestamp AT TIME ZONE 'UTC')
);

CREATE TABLE AccountOrderProduct(
    account_order INT NOT NULL REFERENCES AccountOrder(id),
    product INT NOT NULL REFERENCES Product(id),
    quantity INT NOT NULL CHECK (quantity > 0),
    price FLOAT(2) NOT NULL CHECK (price > 0),
    status VARCHAR(20) NOT NULL,
    shipped_at TIMESTAMP WITHOUT TIME ZONE NOT NULL DEFAULT (current_timestamp AT TIME ZONE 'UTC'),
    delivered_at TIMESTAMP WITHOUT TIME ZONE NOT NULL DEFAULT (current_timestamp AT TIME ZONE 'UTC'),
    PRIMARY KEY (account_order, product)
);

CREATE TABLE Review(
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    author INT NOT NULL REFERENCES Account(id),
    title VARCHAR(50) NOT NULL,
    description VARCHAR NOT NULL,
    written_at TIMESTAMP WITHOUT TIME ZONE NOT NULL DEFAULT (current_timestamp AT TIME ZONE 'UTC'),
    edited_at TIMESTAMP WITHOUT TIME ZONE NOT NULL DEFAULT (current_timestamp AT TIME ZONE 'UTC'),
    rating SMALLINT NOT NULL CHECK (rating >= 1 AND rating <= 5)
);

CREATE TABLE ReviewImage(
    review INT NOT NULL PRIMARY KEY REFERENCES Review(id),
    url VARCHAR NOT NULL
);

CREATE TABLE ReviewVote(
    account INT NOT NULL REFERENCES Account(id),
    review INT NOT NULL REFERENCES Review(id),
    rating SMALLINT NOT NULL CHECK (rating = -1 OR rating = 1),
    PRIMARY KEY (account, review)
);

CREATE TABLE ProductReview(
    review INT NOT NULL PRIMARY KEY REFERENCES Review(id),
    product INT NOT NULL REFERENCES Product(id)
);

CREATE TABLE SellerReview(
    review INT NOT NULL PRIMARY KEY REFERENCES Review(id),
    seller INT NOT NULL REFERENCES Seller(id)
);

-- 
-- View that maps new db design to template schema. Should be replaced once python code is rewritten
-- 
CREATE VIEW Purchase AS
    SELECT AccountOrder.id AS id, AccountOrder.account AS uid, AccountOrderProduct.product AS pid, AccountOrder.placed_at AS time_purchased
    FROM AccountOrder, AccountOrderProduct
    WHERE AccountOrder.id = AccountOrderProduct.account_order;
